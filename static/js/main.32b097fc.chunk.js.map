{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","tittle","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","toggleMode2","toggleMode3","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","count","setcount","_useState5","_useState6","wordCount","setWordCount","_useState7","_useState8","oldT","oldText","_useState9","_useState10","newT","newText","Fragment","style","color","heading","placeholder","rows","value","onChange","event","console","log","length","target","trim","split","replace","backgroundColor","toUpperCase","showAlert","toLowerCase","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAQe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,iBAAAC,OAAmBL,EAAMM,KAAI,QAAAD,OAAOL,EAAMM,OACtDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAC9BP,EAAMQ,QAETP,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAG,SAI7DN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWG,KAAK,UAAQ,WAgBzCN,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA+C,UAAdL,EAAMM,KAAgB,OAAO,UAC5EL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWQ,KAAK,SAASF,GAAG,yBAAyBG,QAASlB,EAAMmB,aAC7GlB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBgB,QAAQ,0BAAwB,oBAEpEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA+C,UAAdL,EAAMM,KAAgB,QAAQ,UAC7EL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWQ,KAAK,SAASF,GAAG,yBAAyBG,QAASlB,EAAMqB,cAC7GpB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBgB,QAAQ,0BAAwB,qBAEpEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA+C,UAAdL,EAAMM,KAAgB,SAAS,UAC9EL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWQ,KAAK,SAASF,GAAG,yBAAyBG,QAASlB,EAAMsB,cAC7GrB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBgB,QAAQ,0BAAwB,yBC1D/D,SAASG,EAASvB,GAC7B,IA8BCwB,EAEsBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA5BK,EAAIH,EAAA,GAACI,EAAOJ,EAAA,GAAAK,EACMN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAA9BE,EAAKD,EAAA,GAACE,EAAQF,EAAA,GAAAG,EACaV,mBAAS,GAAEW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACPd,mBAAS,IAAGe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAA5BE,EAAID,EAAA,GAACE,EAAOF,EAAA,GAAAG,EACIlB,mBAAS,IAAGmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAA5BE,EAAID,EAAA,GAACE,EAAOF,EAAA,GAGrB,OACE3C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6C,SAAA,KACA9C,EAAAC,EAAAC,cAAA,OAAK6C,MAAO,CAACC,MAAqB,SAAdjD,EAAMM,KAAe,QAAQ,UAC7CL,EAAAC,EAAAC,cAAA,UAAKH,EAAMkD,SACbjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,YACEgD,YAAY,kBACZ/C,UAAU,eACVW,GAAG,QACHqC,KAAK,KACLC,MAAOxB,EACPyB,SAnCiB,SAACC,GACpBC,QAAQC,IAAI,YACZD,QAAQC,IAAI5B,GACA,IAARA,GAAqC,KAAvBA,EAAKA,EAAK6B,OAAO,KACjCH,EAAMI,OAAON,MAAQE,EAAMI,OAAON,MAAMO,KAAK,KAE/C9B,EAAQyB,EAAMI,OAAON,OACrBf,EAAaT,EAAKgC,MAAM,KAAKH,QAC7BxB,EAASL,EAAKiC,QAAQ,MAAO,MA6B3Bd,MAAO,CAACe,gBAA+B,SAAd/D,EAAMM,KAAe,UAAU,QAAQ2C,MAAqB,SAAdjD,EAAMM,KAAe,QAAQ,YAGxGL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oCAAoCc,QAvDlC,WAClBsC,QAAQC,IAAI,yBACZ,IAAIX,EAAUjB,EAAKmC,cACnBlC,EAAQgB,GACR9C,EAAMiE,UAAU,gCAAgC,aAmD2B,wBAC7EhE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oCAAoCc,QAlDhC,WACpB,IAAI4B,EAAUjB,EAAKqC,cACnBpC,EAAQgB,GACR9C,EAAMiE,UAAU,gCAAgC,aA+C2B,yBAE7EhE,EAAAC,EAAAC,cAAA,SAAO6C,MAAO,CAACe,gBAA+B,SAAd/D,EAAMM,KAAe,UAAU,QAAQ2C,MAAqB,SAAdjD,EAAMM,KAAe,QAAQ,SAAUG,KAAK,OAAOL,UAAU,0CAA0CiD,MAAOZ,EAAMa,SAjClL,SAACC,GACfb,EAAQa,EAAMI,OAAON,UAkCvBpD,EAAAC,EAAAC,cAAA,SAAO6C,MAAO,CAACe,gBAA+B,SAAd/D,EAAMM,KAAe,UAAU,QAAQ2C,MAAqB,SAAdjD,EAAMM,KAAe,QAAQ,SAAUG,KAAK,OAAOL,UAAU,0CAA0CiD,MAAOR,EAAMS,SAhClL,SAACC,GACfT,EAAQS,EAAMI,OAAON,UAgCvBpD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+Bc,QAlDxB,WACvBY,EAAQD,EAAKiC,QAAQrB,EAAKI,MAiDiD,wCAE/E5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB4C,MAAO,CAACC,MAAqB,SAAdjD,EAAMM,KAAe,QAAQ,UACxEL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAIkC,EAAS,cAAaJ,EAAMyB,OAAM,eACtCzD,EAAAC,EAAAC,cAAA,SAAI,KAAM0B,EAAKgC,MAAM,KAAKH,OAAM,iBAChCzD,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcyB,KC9DpBsC,MARf,SAAenE,GACb,OAEEA,EAAMoE,OAASnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDAAkDa,KAAK,SACjFhB,EAAAC,EAAAC,cAAA,cAASH,EAAMoE,MAAM3D,MAAc,KAAGT,EAAMoE,MAAMC,MC+F3CC,MA5Ff,WAAe,IAAA9C,EACWC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlClB,EAAIoB,EAAA,GAAE6C,EAAO7C,EAAA,GAAAK,EACMN,mBAAS,MAAKO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAjCqC,EAAKpC,EAAA,GAAEwC,EAAQxC,EAAA,GAEhBiC,EAAY,SAACQ,EAAShE,GAE1B+D,EAAS,CACPH,IAAKI,EACLhE,KAAMA,IAGRiE,WAAW,WACTF,EAAS,OACR,MAqCL,OAOEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6C,SAAA,KAKE9C,EAAAC,EAAAC,cAACJ,EAAM,CACLS,OAAO,YACPF,KAAMA,EACNa,WAjDa,WACJ,UAATb,GACFiE,EAAQ,QACRI,SAASC,KAAK5B,MAAMe,gBAAkB,UACtCE,EAAU,uBAAwB,aAElCM,EAAQ,SACRI,SAASC,KAAK5B,MAAMe,gBAAkB,QACtCE,EAAU,wBAAyB,aA0CjC5C,YAvCc,WACL,UAATf,GACFiE,EAAQ,SACRI,SAASC,KAAK5B,MAAMe,gBAAkB,QACtCE,EAAU,wBAAyB,aAEnCM,EAAQ,SACRI,SAASC,KAAK5B,MAAMe,gBAAkB,QACtCE,EAAU,wBAAyB,aAgCjC3C,YA7Bc,WACL,UAAThB,GACFiE,EAAQ,UACRI,SAASC,KAAK5B,MAAMe,gBAAkB,SACtCE,EAAU,yBAA0B,aAEpCM,EAAQ,SACRI,SAASC,KAAK5B,MAAMe,gBAAkB,QACtCE,EAAU,wBAAyB,eAuBnChE,EAAAC,EAAAC,cAAC0E,EAAK,CAACT,MAAOA,IAEdnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAUfH,EAAAC,EAAAC,cAACoB,EAAQ,CACC2B,QAAQ,4BACR5C,KAAMA,EACN2D,UAAWA,OCjFZa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWjB,SAASkB,eAAe,SACpDC,OACH7F,EAAAC,EAAAC,cAACF,EAAAC,EAAM6F,WAAU,KACf9F,EAAAC,EAAAC,cAAC6F,EAAG,QAORlB","file":"static/js/main.32b097fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// Exporting this JSX code to app.js\r\n\r\n// Props are just we pass as parameters to functions, we can use that value in JSX  \r\n// Recieving props in parameters\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} bg-${props.mode}`} >\r\n      <div className=\"container-fluid\">\r\n        {/* adding props using . and curly braces as it is Js component */}\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.tittle}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/About\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n        </div>\r\n          <div className={`form-check form-switch text-${props.mode ==='light'?'green':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode2} />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable GreenMode</label>\r\n        </div>\r\n          <div className={`form-check form-switch text-${props.mode ==='light'?'purple':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode3} />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable PurpleMode</label>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// Will display an error in console if other datatype is passed other than below one\r\n// This is called PropTypes\r\nNavbar.propTypes = {\r\n    tittle: PropTypes.string\r\n};\r\n// we can even use default props.","import React,{useState} from \"react\";\r\n// State Components UpdateLive in react Apps\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase Was Clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Converted to UpperCase!!\",\"Success\");\r\n      }\r\n      const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Converted to LowerCase!!\",\"Success\");\r\n    }\r\n    const handleReplaceClick = ()=>{\r\n        setText(text.replace(oldT,newT))\r\n    }\r\n    // Updating the Text Statevariable using event Obj\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"OnChange\")\r\n        console.log(text)\r\n        if (text == '' || text[text.length-1] == ' ') {\r\n          event.target.value = event.target.value.trim('')\r\n        }\r\n        setText(event.target.value)\r\n        setWordCount(text.split(' ').length)\r\n        setcount(text.replace(/\\s/g, \"\"));\r\n    }\r\n    const oldChange = (event)=>{\r\n        oldText(event.target.value)\r\n    }\r\n    const newChange = (event)=>{\r\n        newText(event.target.value)\r\n    }\r\n    \r\n    const [text,setText] = useState('');\r\n    const [count,setcount] = useState('');\r\n    const [wordCount, setWordCount] = useState(0)\r\n    const [oldT,oldText] = useState('');\r\n    const [newT,newText] = useState('');\r\n    // text = \"new Text\"; Wrong way to Update state component\r\n    // setText(\"new Text\"); Correct way to change State by calling state function\r\n  return (\r\n    <>\r\n    <div style={{color: props.mode ==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          placeholder=\"Enter Your Text\"\r\n          className=\"form-control\"\r\n          id=\"mybox\"\r\n          rows=\"10\"\r\n          value={text}\r\n          onChange={handleOnChange} // This will run when we are trying to change the Value\r\n          // we used two brackets in this style because we are using JS inside style\r\n          style={{backgroundColor: props.mode ==='dark'?'#141313':'white',color: props.mode ==='dark'?'white':'black'}}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-outline-primary mx-2 my-3\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n      <button className=\"btn btn-outline-primary mx-2 my-3\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n    </div>\r\n      <input style={{backgroundColor: props.mode ==='dark'?'#141313':'white',color: props.mode ==='dark'?'white':'black'}} type=\"text\" className=\"form-control input-group mb-3 mx-2 my-2\" value={oldT} onChange={oldChange} />\r\n      \r\n      <input style={{backgroundColor: props.mode ==='dark'?'#141313':'white',color: props.mode ==='dark'?'white':'black'}} type=\"text\" className=\"form-control input-group mb-3 mx-2 my-2\" value={newT} onChange={newChange} />\r\n      <button className=\"btn btn-outline-primary mx-2\" onClick={handleReplaceClick}>Replace Click Again to Replace Other</button>\r\n    \r\n    <div className=\"container my-3\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{wordCount} Words and {count.length} Charecters</p>\r\n        <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n        <h2>Preview in Italic Font</h2>\r\n        <p className=\"fst-italic\">{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    // as first time its NULL, it wont show alert\r\n    props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\nexport default Alert","// Creating this app by running 'npm create-react-app MY-APP' will install all related reactApp tools\nimport \"./App.css\";\n// import AboutUs from \"./components/AboutUs\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    // setting alert stateVariable as Object\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    // Will automatically run this function after 1sec\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#141313\";\n      showAlert(\"DarkMode has Enabled\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"LightMode has Enabled\", \"Success\");\n    }\n  };\n  const toggleMode2 = () => {\n    if (mode === \"light\") {\n      setMode(\"green\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\"GreenMode has Enabled\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"LightMode has Enabled\", \"Success\");\n    }\n  };\n  const toggleMode3 = () => {\n    if (mode === \"light\") {\n      setMode(\"purple\");\n      document.body.style.backgroundColor = \"purple\";\n      showAlert(\"PurpleMode has Enabled\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"LightMode has Enabled\", \"Success\");\n    }\n  };\n\n  return (\n    // This is JSX, JavaScript extension.\n    // its basically html but with help of curly braces we can use JS variables\n    // but we write 'className' instead of class in html as class is already defined in JS\n    // <div className=\"temp\"></div>\n\n    // we are using this as we should only return one tag\n    <>\n    \n    {/* <Router> */}\n\n      {/* Passing props to function */}\n      <Navbar\n        tittle=\"TextUtils\"\n        mode={mode}\n        toggleMode={toggleMode}\n        toggleMode2={toggleMode2}\n        toggleMode3={toggleMode3}\n      ></Navbar>\n      <Alert alert={alert}></Alert>\n\n      <div className=\"container my-3\">\n        {/* Using react-Router to access pages without reloading */}\n      {/* <Routes> */}\n          {/* <Route exact path=\"/\" element={<TextForm\n                heading=\"Enter the text to Analyze\"\n                mode={mode}\n                showAlert={showAlert}\n              ></TextForm>}/>\n          <Route exact path=\"/About\" element={<AboutUs/>}/>\n      </Routes> */}\n      <TextForm\n                heading=\"Enter the text to Analyze\"\n                mode={mode}\n                showAlert={showAlert}\n              ></TextForm>\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}